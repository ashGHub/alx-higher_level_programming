The ``2-matrix_divided`` module
==============================

Using ``matrix_divided``
------------------------------

Import ``matrix_divided``:

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

No Argument Passed
	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Call with missing arguments
        >>> matrix_divided([['1', '2']])
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

        >>> matrix_divided(6)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

Arguments with incorrect type
        >>> matrix_divided([['a', 'b']], 5)
        Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix_divided([[1, 2]], 'c')
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

Invalid div values
        >>> matrix_divided([[1, 2]], "string")
        Traceback (most recent call last):
                ...
        TypeError: div must be a number

        >>> matrix_divided([[1, 2]], 0)
        Traceback (most recent call last):
                ...
        ZeroDivisionError: division by zero

Matrix elements with different size
        >>> matrix_divided([[1, 3], [5]], 5)
        Traceback (most recent call last):
                ...
        TypeError: Each row of the matrix must have the same size

Div with float infinity
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
        [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('-inf'))
        [[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]

With valid matrix elements and divider
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
